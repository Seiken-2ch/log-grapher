var irc_app = './log.js',html_app = './http.js';var daemon_log = require('daemonize2').setup({    main: irc_app,    name: 'log-irc',    pidfile: '../log-irc.pid'}),daemon_http = require('daemonize2').setup({    main: html_app,    name: 'log-view',    pidfile: '../log-view.pid'});switch (process.argv[2]) {    case '-f':        require(irc_app);        require(html_app);        break;    case 'start':        daemon_log.start();        daemon_http.start();        break;    case 'httpstart':        daemon_http.start();        break;    case 'stop':        daemon_log.stop();        daemon_http.stop();        break;    case 'httpstop':        daemon_http.stop();        break;    case 'restart':        daemon_log.stop(function(err) {            daemon_log.start();        });        daemon_http.stop(function(err) {            daemon_http.start();        });        break;    case 'httprestart':        daemon_http.stop(function(err) {            daemon_http.start();        });        break;    case 'status':        var pid1 = daemon_log.status();        var pid2 = daemon_http.status();        if (pid1)            console.log('Log daemon running. PID: ' + pid1);        else            console.log('Log daemon is not running.');        if (pid2)            console.log('Web daemon running. PID: ' + pid2);        else            console.log('Web daemon is not running.');        break;    case 'reconfig':        console.log('Loading new config..');        daemon_log.sendSignal("SIGUSR1");        daemon_http.sendSignal("SIGUSR1");        break;    case 'stats':        console.log('Writing stats to log file..');        daemon_log.sendSignal("SIGUSR2");        daemon_http.sendSignal("SIGUSR2");        break;            default:        console.log('Usage: [-f|start|httpstart|stop|httpstop|restart|httprestart|status|reconfig]');}